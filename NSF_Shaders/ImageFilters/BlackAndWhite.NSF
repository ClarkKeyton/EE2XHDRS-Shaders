//
// BlackAndWhite.NSF
// --------------------------------------------------------
//
// author: Daniel Sproul
//
// description:
// shader which implements a black-and-white filter for
// post-processing a rendered scene
//
// --------------------------------------------------------

NSFShader BlackAndWhite
{
	// Packing Definition
	PackingDef Pos_Tex0
	{
		PD_FixedFunction	false
		PD_Stream			0
		PDP_Position		0	PDT_Float3
		PDP_TexCoord0		7	PDT_Float2
	}

	// Implementation
    Implementation VS10PS14
    {
        // Requirements for this implementation
        Requirements
        {
            Platform            = DX8|DX9|XBOX
            VSVersion           = v1.0
            PSVersion           = v1.4
            UserVersion         = v0.0
            UsesNiRenderState   = true
        }

		// Packing Definition it uses
		PackingDef	Pos_Tex0
        
        // First pass
        Pass Pass0
        {            
			// Vertex shader program
            VSProgram   "PassThrough.vsh"
            
			// Pixel shader program
            PSProgram   "BlackAndWhite.psh"
            
            // Vertex Shader constant map
			VS_Constantmap
			{
				// Matrices
				CM_Defined		WorldViewProjTranspose	6	0
			}
            
            // Vertex Shader constant map
			PS_Constantmap
			{
				// weights used for computing perceived intensity
				CM_Constant		RGBWeights				0	1	0.3,0.5,0.2,1.0
			}
            
			// Texture stage 0
			// (base texture)
			Stage 0 Stage0
			{
				TSS_Texture					= NTM_Base
				TSS_TexCoordIndex			= 0
				TSS_TextureTransformFlags	= TTFF_Disable
			}

			// Sampler stage 0
			Sampler 0   Sampler0
			{
				TSAMP_AddressU  = TADDR_Clamp
				TSAMP_AddressV  = TADDR_Clamp
				TSAMP_MagFilter = TEXF_Linear
				TSAMP_MinFilter = TEXF_Linear
				TSAMP_MipFilter = TEXF_None
			}
        }
    }
}
