NSFShader WaterShader
{
""
    // Attribute list
    Attributes
    {
        Attrib_Float
            FirstTexture_Transparency
            Artist
            1.0
	    [0.0 1.0]
		Attrib_Point4
	    Constant_one
            Hidden
            1.0, 1.0, 1.0, 1.0
    }

    // Packing Definition
    PackingDef PosNormUV0
    {
        PD_Stream   	0
        PDP_Position    0   PDT_Float3
		PDP_Color       3   PDT_Float4
        PDP_TexCoord0   7   PDT_Float2
		PDP_TexCoord1   8   PDT_Float2
    }

	// Packing Definition
    PackingDef PosNormUVNOSHADER
    {
        PD_Stream   	0
        PDP_Position    0   PDT_Float3
		PDP_Color       3   PDT_Float4
        PDP_TexCoord0   7   PDT_Float2
    }

	// Implementation
    Implementation VS90
    {
        "This implementation is intended for hardware 
         that supports vertex shader version 1.0"
        
        // Requirements for this implementation
        Requirements
        {
            Platform            = DX8|DX9|XBOX
            VSVersion           = v1.0
            UserVersion         = v0.0
            PSVersion           = v0.0
            UsesNiRenderState   = true
        }
        
        // Packing Definition it uses
        PackingDef  PosNormUV0

        // 'Global' render states
        RenderStates
        {
            ZEnable             = ZB_True
            ZWriteEnable        = false
            ZFunc               = LessEqual
            AlphaBlendEnable    = true
			SrcBlend            = SrcAlpha
            DestBlend           = InvSrcAlpha
            Lighting            = false
        }

        // First pass
        Pass Pass0
        {
            // Vertex shader program
            VSProgram   "WaterShader.vsh"

            // Vertex Shader constant map
            VS_Constantmap
            {
                CM_Defined      WorldViewProjTranspose  			0	0
				CM_Attribute	Constant_one						4   1   0
				CM_Attribute    FirstTexture_Transparency			5   1   0
            }
            
            // Texture stage 0
            Stage 0 Stage0
            {
				TSS_ColorArg1   = TA_Texture
                TSS_ColorOp     = TOP_SelectArg1
				TSS_AlphaArg1   = TA_Texture
				TSS_AlphaArg2   = TA_Specular
                TSS_AlphaOp     = TOP_Modulate
				TSS_Texture     = NTM_Base
				TSS_TexCoordIndex = 0
				TSS_TextureTransformFlags = TTFF_Disable
            }
            
            // Sampler stage 0
            Sampler 0   Sampler0
            {
                TSAMP_AddressU  = TADDR_Wrap
                TSAMP_AddressV  = TADDR_Wrap
                TSAMP_AddressW  = TADDR_Wrap
                TSAMP_MagFilter = TEXF_Linear
                TSAMP_MinFilter = TEXF_Linear
                TSAMP_MipFilter = TEXF_None
            }

			// Texture stage 1
            Stage 1 Stage1
            {
                TSS_ColorArg1   = TA_Texture
                TSS_ColorArg2   = TA_Current
				TSS_ColorOp     = TOP_BlendDiffuseAlpha
				TSS_AlphaOp     = TOP_Disable
                TSS_Texture     = NTM_Dark
				TSS_TexCoordIndex = 1
				TSS_TextureTransformFlags	= TTFF_Disable
            }

            // Sampler stage 1
            Sampler 1   Sampler1
            {
                TSAMP_AddressU  = TADDR_Wrap
                TSAMP_AddressV  = TADDR_Wrap
                TSAMP_AddressW  = TADDR_Wrap
                TSAMP_MagFilter = TEXF_Linear
                TSAMP_MinFilter = TEXF_Linear
                TSAMP_MipFilter = TEXF_None
            }
        }
    }

	   

	// Implementation
    Implementation NoShader
    {
        "This implementation is intended for hardware 
         that supports vertex shader version 0.0"
        
        // Requirements for this implementation
        Requirements
        {
            Platform            = DX8|DX9|XBOX
            VSVersion           = v0.0
            UserVersion         = v0.0
            PSVersion           = v0.0
            UsesNiRenderState   = true
        }
        
        // Packing Definition it uses
        //PackingDef  PosNormUVNOSHADER

		// Vertex Shader constant map
        VS_Constantmap
            {
                CM_Defined      WorldViewProjTranspose  			0	0
            }

        // 'Global' render states
        RenderStates
        {
            ZEnable             = ZB_True
            ZWriteEnable        = false
            ZFunc               = LessEqual
            AlphaBlendEnable    = true
			SrcBlend            = SrcAlpha
            DestBlend           = InvSrcAlpha
            Lighting            = false
        }

        // First pass
        Pass Pass0
        {    
            // Texture stage 0
            Stage 0 Stage0
            {
				TSS_ColorArg1   = TA_Texture
                TSS_ColorOp     = TOP_SelectArg1
				TSS_AlphaArg1   = TA_Diffuse
                TSS_AlphaOp     = TOP_SelectArg1
				TSS_Texture     = NTM_Base
				TSS_TexCoordIndex = 0
				TSS_TextureTransformFlags = TTFF_Disable
            }
            
            // Sampler stage 0
            Sampler 0   Sampler0
            {
                TSAMP_AddressU  = TADDR_Wrap
                TSAMP_AddressV  = TADDR_Wrap
                TSAMP_AddressW  = TADDR_Wrap
                TSAMP_MagFilter = TEXF_Linear
                TSAMP_MinFilter = TEXF_Linear
                TSAMP_MipFilter = TEXF_None
            }
        }
    }
}
