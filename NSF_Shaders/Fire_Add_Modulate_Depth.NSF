NSFShader Fire_Add_Modulate_Depth
{
	// Attribute list
    Attributes
    {
        Attrib_Point4
	    _1
        Hidden
		1, -0.05, 0.1, 0.1
    }

	// Packing Definition
    PackingDef PosColUV0
    {
        PD_Stream   	0
        PDP_Position    0   PDT_Float3
		PDP_Normal		1   PDT_Float3
		PDP_Color       2   PDT_UByteColor
        PDP_TexCoord0   3   PDT_Float2
    }

	//-----------------------------------------
	// Advance explosion
	//
    Implementation VS11_PX14
    {
        // Requirements for this implementation
        Requirements
        {
            Platform            = DX8|DX9|XBOX
            VSVersion           = v1.1
            UserVersion         = v0.0
            PSVersion           = v1.4
            UsesNiRenderState   = true
        }
        
        // 'Global' render states
        RenderStates
        {
            ZEnable             = ZB_True
            ZWriteEnable        = false
            ZFunc               = LessEqual
            AlphaBlendEnable    = true
			SrcBlend            = SrcAlpha
            DestBlend           = InvSrcAlpha
            Lighting            = false
        }

		// Packing Definition it uses
        PackingDef  PosColUV0

        // First pass
        Pass Pass0
        {    
			//--------------------------------
			// Vertex shader program
			//
            VSProgram   "FireAdd_Modulate_Depth.vsh"
            VS_Constantmap
            {
				CM_Defined		WorldViewProjTranspose				0	0
            }

			//--------------------------------
			// Pixel shader program
			//
            PSProgram   "FireAdd_Modulate_Depth.psh"
			PS_Constantmap
            {
				CM_Attribute _1							0   1	0
            }

			//----------------------
            // Explosion texture
			//
            Stage 0 Stage0
            {
				TSS_Texture     = NTM_Base
				TSS_TexCoordIndex = 0
				TSS_TextureTransformFlags	= TTFF_Disable
            }
            
            // Sampler stage 0
            Sampler 0   Sampler0
            {
                TSAMP_AddressU  = TADDR_Clamp
                TSAMP_AddressV  = TADDR_Clamp
                TSAMP_AddressW  = TADDR_Clamp
                TSAMP_MagFilter = TEXF_Linear
                TSAMP_MinFilter = TEXF_Linear
                TSAMP_MipFilter = TEXF_None
            }
        }
    }

	//-----------------------------------------
	// General explosion
	//
    Implementation NoShader
    {
        "This implementation is intended for hardware 
         that supports vertex shader version 0.0"
        
        // Requirements for this implementation
        Requirements
        {
            Platform            = DX8|DX9|XBOX
            VSVersion           = v0.0
            UserVersion         = v0.0
            PSVersion           = v0.0
            UsesNiRenderState   = true
        }
        
        // 'Global' render states
        RenderStates
        {
            ZEnable             = ZB_True
            ZWriteEnable        = false
            ZFunc               = LessEqual
            AlphaBlendEnable    = true
			SrcBlend            = SrcAlpha
            DestBlend           = InvSrcAlpha
            Lighting            = false
        }

        // First pass
        Pass Pass0
        {    
            // Texture stage 0
            Stage 0 Stage0
            {
				TSS_ColorArg1   = TA_Texture
				TSS_ColorArg2   = TA_Diffuse
                TSS_ColorOp     = TOP_Add
				TSS_AlphaArg1   = TA_Texture
				TSS_AlphaArg2   = TA_Diffuse
                TSS_AlphaOp     = TOP_Modulate
				TSS_Texture     = NTM_Base
				TSS_TexCoordIndex = 0
				TSS_TextureTransformFlags	= TTFF_Disable
            }
            
            // Sampler stage 0
            Sampler 0   Sampler0
            {
                TSAMP_AddressU  = TADDR_Clamp
                TSAMP_AddressV  = TADDR_Clamp
                TSAMP_AddressW  = TADDR_Clamp
                TSAMP_MagFilter = TEXF_Linear
                TSAMP_MinFilter = TEXF_Linear
                TSAMP_MipFilter = TEXF_None
            }
        }
    }
}
